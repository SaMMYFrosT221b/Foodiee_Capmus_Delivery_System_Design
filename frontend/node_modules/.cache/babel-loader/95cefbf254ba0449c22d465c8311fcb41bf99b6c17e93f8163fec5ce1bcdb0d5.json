{"ast":null,"code":"var _jsxFileName = \"/home/sammy/Documents/React Projects/Foodiee/testing/frontend/src/pages/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const differentHostData = {\n    UserHost: \"http://localhost:5000\",\n    ShopkeeperHost: \"http://localhost:6000\",\n    DeliveryBoyHost: \"http://localhost:7000\"\n  };\n  const routesMappingOfUSerTypes = {\n    \"User\": \"user\",\n    \"Shopkeeper\": \"shopkeeper\",\n    \"Delivery Boy\": \"deliveryboy\"\n  };\n  const [userType, setUserType] = useState(\"User\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = {\n      UserType: userType,\n      Email: email,\n      Password: password\n    };\n    console.log(\"Form Data:\", formData);\n    try {\n      const response = await fetch(`http://localhost:5000/${routesMappingOfUSerTypes[formData.UserType]}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n\n      // const responseData = await axios.post(\"http://localhost:5000/rat\", formData);\n      const responseData = await response.json();\n      console.log(\"Response from server:\", responseData);\n      if (responseData.status == 1) {\n        navigate(\"/books\");\n        console.log(responseData.content);\n      } else if (responseData.status == -1) {\n        navigate(\"/login\");\n        console.log(responseData.content);\n      } else {\n        console.log(responseData.content);\n      }\n    } catch (error) {\n      console.error(\"Error sending data to server:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"User Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: userType,\n        onChange: e => setUserType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"User\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Shopkeeper\",\n          children: \"Shopkeeper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Delivery Boy\",\n          children: \"Delivery Boy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"CB8JLuzFW4bkRe+7Ef7p5ywRu0E=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginForm","_s","differentHostData","UserHost","ShopkeeperHost","DeliveryBoyHost","routesMappingOfUSerTypes","userType","setUserType","email","setEmail","password","setPassword","navigate","handleSubmit","event","preventDefault","formData","UserType","Email","Password","console","log","response","fetch","method","headers","body","JSON","stringify","responseData","json","status","content","error","onSubmit","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/sammy/Documents/React Projects/Foodiee/testing/frontend/src/pages/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\n\n\nfunction LoginForm() {\n  const differentHostData = {\n    UserHost: \"http://localhost:5000\",\n    ShopkeeperHost: \"http://localhost:6000\",\n    DeliveryBoyHost: \"http://localhost:7000\",\n  };\n\n  const routesMappingOfUSerTypes = {\n    \"User\":\"user\",\n    \"Shopkeeper\":\"shopkeeper\",\n    \"Delivery Boy\":\"deliveryboy\"\n  }\n\n  const [userType, setUserType] = useState(\"User\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = {\n      UserType: userType,\n      Email: email,\n      Password: password,\n    };\n    console.log(\"Form Data:\", formData);\n\n    try {\n      const response = await fetch(`http://localhost:5000/${routesMappingOfUSerTypes[formData.UserType]}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      // const responseData = await axios.post(\"http://localhost:5000/rat\", formData);\n      const responseData = await response.json();\n      console.log(\"Response from server:\", responseData);\n      if (responseData.status == 1) {\n        navigate(\"/books\");\n        console.log(responseData.content);\n      } else if (responseData.status == -1) {\n        navigate(\"/login\");\n        console.log(responseData.content);\n      } else {\n        console.log(responseData.content);\n      }\n    } catch (error) {\n      console.error(\"Error sending data to server:\", error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        User Type:\n        <select value={userType} onChange={(e) => setUserType(e.target.value)}>\n          <option value=\"User\">User</option>\n          <option value=\"Shopkeeper\">Shopkeeper</option>\n          <option value=\"Delivery Boy\">Delivery Boy</option>\n        </select>\n      </label>\n      <br />\n      <label>\n        Email:\n        <input\n          type=\"text\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </label>\n      <br />\n      <label>\n        Password:\n        <input\n          type=\"text\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </label>\n      <br />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}